第0章 计算机概论
1、计算机的五大单元：输入单元，输出单元，cpu内部控制单元、算数逻辑单元，内存）。
2、软件需要经过cpu内部的微指令集，cpu种类分为精简指令集（RISC：指令执行时间短，性能佳，如SPARC、PowerPC、ARM系列）。
与复杂指令集（CISC：指令长度不一，执行复杂，每个指令可处理工作复杂，如AMD、Intel、VIA等x86的架构（即个人计算机常用的x86架构，cpu代号8086、80286、80386。后来的64位叫x86_64架构））。
3、主板上最重要的是芯片组，amd芯片组架构分为两个桥接器控制各组件的通信，分别是（1）北桥负责连接速度快的cpu、内存ram和显卡vga（2）南桥负责连接速度较慢的周边接口pci或io设备，如硬盘、usb、网卡等；
intel为了加速cpu和内存通信，将内存控制组件集成到cpu中。
4、cpu性能比较除了微指令集导致的效率差别，还有频率（只可用于比较同款cpu，因微指令集和架构不同，每次频率能进行的工作指令树不同），3.0GHz表示cpu在一秒内可以进行3.0*10^9次工作。
外频是cpu与外部组件进行数据传输和运算的速度，倍频是cpu内部用来加速工作性能的倍数，两者相乘才是cpu的频率。
5、北桥总线是系统总线，内存传输的主要信道。所支持的频率为前端总线速度FSB，每次传送的位数是总线宽度（32/64），总线频宽是FSB*总线宽度，即每秒传送最大数据量，如1600MHz*64bit=12800MB/s=12.8GB/s；
cpu每次能处理的数据量称为字组大小（机器字长），依据cpu的设计有32和64位（即现在称呼的32位计算机）。这个才是导致32位cpu最多只能支持最大到4GB的内存。字组大小和总线宽度可以不同。
南桥是输出输出io总线。
6、x86架构的cpu有不统一的引脚位和设计，为了将不同种类的cpu规范登记，有了i386、i586、i686.目前的64位cpu则统称位x86_64等级。
7、个人计算机的内存主要组件是动态随机访问内存DRAM，断电数据消失，称这种RAM为挥发性内存。
8、cpu和内存的外频应该相同较好。
9、cpu的l2 cache用静态随机访问内存SRAM，速度与cpu频率相同。l2缓存集成到cpu内部，加速cpu运行性能。
10、BIOS是一套程序，写死在主板上的内存芯片中，在没有通电时也可以将数据记录，即只读存储器ROM，非挥发性内存，开机读取的小程序（系统硬件详细信息和开机设备选择等）。
固件很多也是使用ROM进行软件写入。需要更新，但原使用是无法修改的ROM，为此，现在BIOS写入闪存或FFPROM。
11、显卡VGA，每个图像显示的颜色会占用内存，因此显卡上面会有一个内存容量，影响到最后屏幕分辨率和色彩深度。3D要求运算能力，GPU即是在显卡上面嵌入3D加速的芯片。
显卡需要通过北桥芯片与cpu和内存通信，数据传输需要快，规格有早期PCI导向AGP，现在PCI-Express，插槽区别在于数据传输的频宽。
12、硬盘有主轴马达、盘片、机械手臂和磁头组成。
圆心放射状分割出硬盘的最小存储单位，即扇区sector，每个扇区大小为512bytes，此值不改变。扇区组成一个圆称为磁道track，若在多硬盘上，在所有盘片上面同一磁道组成柱面cylinder，即分割硬盘最小单位。
计算硬盘存储量：header读取头*每个header负责的柱面数量*每个柱面含有的扇区数量*扇区容量512bytes。注意硬盘容量以十进制编号，所以市售500GB硬盘，理论仅有460GB大小（500以1000再除1024换算）。
13、内核管控硬件和提供相关功能力如网络功能，这些操作重要，若用户破坏内核将导致系统奔溃，所以内核程序防止到内存中的区块是受保护的，并且开机后一直常驻内存。
硬件不同则操作系统源码需修改。
14、硬件、操作系统（内核：系统相关资源分配和管理，功能：程序/内存/文件系统/设备驱动管理；系统调用：开发接口，方便应用程序与内核通信）：管理硬件资源，如cpu，内存，io和系统文件、
应用程序：参考操作系统接口，只能在该操作系统上运行。
15、操作系统必须可以驱动硬件，这样应用程序才能够使用硬件功能；操作系统会提供开发接口，开发商可以制作驱动程序；要使用硬件功能，必须安装驱动；驱动是开发商做，与操作系统开发者无关。

第1章 Linux是什么
1、3.10.0-693.el7 主版本.次版本.释出版本-修改版本。主次版本为奇数是开发中版本，主次版本为偶数为稳定版本。linux版本指内核版本。
2、linux distribution是linux kernel+software+tool+documentation。如ubuntu、redhat、centos、debian、fedora用的kernel一致，封装了不同软件等。
套件管理方式分为rpm套件为主的centos和dpkg的debian。

第3章 主机规划与磁盘分区
1、linux中每个设备被当作一个文件，如个人计算机常用的ide接口的硬盘文件名为dev/hd[a-d]，sata硬盘/dev/sd[a-p]。几乎所有硬件设备都在/dev目录中。
可以连接到ide接口的叫做ide设备，不管是磁盘还是光盘设备。主机有两个ide接口，每个可以连两个设备，每个接口分主从设备，依次编号[a-d]；sata接口根据linux内核检测到磁盘的顺序确定设备文件名[a-p]。
2、磁盘的第一个扇区记录了整块磁盘的重要信息：主引导分区MBR（可以安装引导加载程序的地方446bytes。系统开机主动读取）；分区表（记录整块硬盘分区状态64bytes。分区才能使用）。
分区最小单位是柱面。磁盘分区表64bytes容量中，分为四组记录区(称为主和扩展分区)，每组记录区记录了该区段的启始和结束的柱面号码。设备文件名如/dev/hda[1-4],p1:1-100,..,p4:301-400.
当系统要写入磁盘，必须参考磁盘分区表，才能针对某个分区进行数据处理。
不止可以四个分区，通过扩展分区使用额外的扇区来记录分区信息，扩展分区本身不能拿来格式化。扩展分区继续切割的分区，称为逻辑分区，可使用的柱面范围是扩展分区所设定的范围。
注意此时设备文件名：p1:/dev/hda1，p2:/dev/hda2，l1:/dev/hda5,...,l5:/dev/hda9（应该是最后的5-9是逻辑分区，利用扩展分区3，4被保留）.前四个号码留给主和从设备，逻辑分区设备号码从5开始。
tips：
主分区和扩展分区最多四个；扩展分区最多一个；逻辑分区由扩展分区持续切割出来的分区；能够被格式化作为数据访问的分区为主分区和逻辑分区，扩展分区无法格式化；
扩展分区被破坏，所有逻辑分区将会被删除，因为逻辑分区信息记录在扩展分区中；逻辑分区依操作系统而不同，linux中，ide硬盘最多59个逻辑分区，5-63号，sata硬盘11个逻辑分区，5-15号。
3、开机流程：系统主动执行第一个程序即bios（写入在硬件里面的软件程序），bios分析计算机有哪些存储设备，以硬盘为例，bios根据用户设置取得能够开机的硬盘，到硬盘读取第一个扇区的主引导分区MBR位置，
446bytes中有最基本的引导加载程序，bios功成圆满，引导加载程序继续执行，加载内核文件，由于其是操作系统在安装时候提供的，会识别硬盘内文件系统格式，因此可读内核文件，接下来是内核文件开始操作系统功能。
4、bios和mbr都是硬件本身支持的功能，至于boot loader则是操作系统安装在mbr的一套软件，主要任务有：提供菜单（多重引导），载入内核文件（指向可开机的程序区段来开始操作系统），转交其他loader（即
引导加载程序除了可以安装在mbr之外，还可以安装在每个分区的引导扇区boot sector，分区还有个别的启动扇区，早就多重引导功能。
注意：每个分区都有自己的启动扇区，实际可开机的内核文件是放置在各分区的，loader只会认识自己的系统分区内的可开机内核文件，以及其他loader，loader可直接或间接将管理权交给另一个管理程序。
最好现装win再装linux，因为win的安装程序会主动覆盖掉mbr和自己所在分区的启动扇区，没有机会选择；而linux可以选择将引导加载程序安装在mbr或个别分区的启动扇区，且linux的loader可手动设置菜单。
（但其实还是可以通过各种方法来处理mbr内容，以便不重新安装linux）
5、linux所有数据都是文件形式呈现。使用目录树结构。使用挂载来结合目录树的架构和磁盘内的数据。
挂载：利用一个目录当作进入点，将磁盘分区的数据放置在该目录下，进入该目录就可以读取该分区。操作叫做挂载，进入点的目录叫挂载点。由于最重要的是根目录，因此根目录一定需要挂载到某个分区。
6、判断文件在哪个partition，采用反向追踪，最先查到的就是使用的进入点。

第4章 安装CentOS 5.x与多重引导小技巧
1、swap不需要使用目录树的挂载，无需指定挂载点。
2、如果有/boot独立分区时，务必让该分区在整块硬盘最前面，如/dev/hda1。
3、即使有两个硬盘，个人计算机也只有一个mbr，因为需要在bios中调整开机启动的设备，只有第一个可开机设备内的mbr会被系统主动读取，理论上不会将win的引导装载程序安装到/dev/sda而将linux放在
/dev/sdb，而是将grub安装到/dev/sda上，通过它管理win/linux才行，即使linux在/dev/sdb上。
4、多重引导程序设置完毕后，不能随便删除linux，因为grub会读取linux根目录心爱的/boot/目录，若删除linux，则win无法启动，因为整个开机菜单会不见。grub务必安装在mbr。
5、大硬盘导致无法咔叽，可以重新安装linux，并且在磁盘分区的地方，建立一个100mb左右的分区，将其挂载到/boot这个挂载点，并且需将挂载点放在整个硬盘最前面，如/dev/hda1.
6、一般swap要1.5-2倍的物理内存量。
7、centos5.x的引导装载程序是grub，安装时最好选择安装在设备主引导分区mbr中。

第5章 首次登录与在线求助man page  
1、man page中如DATE(1)后面的数字有含义，1表示用户在shell环境中可操作命令或可执行文件；5是配置文件或某些文件的格式；8是系统管理员可用的管理命令。

第6章 Linux的文件权限与目录配置
1、ls -al显示信息：文件权限 连接数（不同文件名连接到同一inode） 文件所有者 文件所属用户组 文件大小 文件最后被修改的时间 文件名
2、第一列10个属性。
第1位是文件类型：第一个字符d为目录，-为文件，l为连接文件，b设备文件里可存储的随机访问的接口设备（硬盘），c设备文件里串行端口设备，一次性读取（键盘，鼠标），套接字属性s，管道属性p。
接下来3个一组的文件权限：文件所有者权限 文件所属用户组权限 其他人权限（ugo代表，a是全部）；rwx读写执行，对应数字为4，2，1；可通过数字或者符号类型改变文件权限。
3、文件和目录的权限意义不同：文件存放世纪数据，目录的内容是记录文件名列表
（1）文件：r读取，w编辑新增修改，不含删除，x执行。都是针对文件内容，与文件名存在与否没有关系；
（2）目录r读取目录，得到文件名数据，w更改目录结构列表，如新建删除重命名转移文件或目录，x为进入该目录成为工作目录（若没有x则无法切换到该目录，无法执行该目录下命令，即使有该目录的r权限。
如果不是拥有者不在同一用户组即属于others，而others对该文件没有rwx，但它拥有该目录的rwx，则无法变动该文件内容，但是可删除该文件。
只有r可以让用户读取目录的文件名列表，但是没有x则读不到详细信息，也不可进入当工作目录
4、ext2/3文件系统的文件名长度限制：单一文件或目录名最大255字符，包含完整路径及目录的4096字符。
5、FHS目录配置标准定义了三层目录下数据：/（root，根目录）：与开机系统有关；/usr：软件安装执行有关unix software resource；/var：与系统运行过程有关。
（1）根目录/与开机还原系统修复等操作有关。根目录所在分区需要小，且应用程序不要在根目录一个分区，保持越小越好。
根目录的子目录/bin是在单用户维护模式下还可以被操作的命令；/boot开机使用，kernel常用文件名vmlinuz，若使用grub这个引导装载程序，则存在/boot/grub/；/opt第三方软件；/srv网络服务数据目录；
/dev是设备与接口设备文件，访问该文件等于访问设备；/etc系统主要配置文件，账号密码文件，服务起始文件；/home主文件夹，～目前用户的主文件夹；/lib开机函数库，/bin或/sbin下命令调用的函数库；
/sbin开机修复还原系统所用命令，服务器软件，本机自行安装的在/usr/local/sbin；/proc虚拟文件系统，不占磁盘空间，数据在内存中；/sys虚拟文件系统，记录与内核相关，如内核模块和硬件设备信息。
开机只有根目录会被挂载，其他分区是开机完成后才会持续进行挂载行为。因此与开机有关目录不能和根目录放在不同分区，如/etc配置文件，/bin重要执行文件，/dev设备文件，/lib函数库与模块，/sbin系统执行文件
（2）usr在刚安装完毕，占用最多硬盘，放置可分享和不可变动的数据。/usr/bin用户使用命令，/usr/local本机自行安装自己下载的软件，/usr/sbin非系统正常运行所需要的系统命令。
（3）var常态性变动文件，缓存，登录文件，软件运行产生的文件，程序文件。

第7章 Linux文件与目录管理
1、执行路径查询路径 echo $PATH，会到显示的目录中查找可执行命令，执行查询到的第一个。不同用户默认PATH不同，默认执行命令不同。
2、umask设置文件目录的默认权限，，分数是默认值需要减掉的权限。注意使用二进制计算时，666-003=663即是-rw-rw--wx完全不对，需要小心非符号的计算。最好还是umask -S符号表示。
3、chattr [+-=] [ai...] 文件或目录名称表示设置文件的隐藏属性，系统安全相关。常见+a只能新增数据，+i完全不能更改文件。lsattr显示隐藏属性。
4、文件特殊权限！！！不止有rwx三种，还有s和t。
SUID：当s出现在文件所有者的x权限上，称为Set UID，简称SUID的特殊权限。
功能限制有：仅对二进制程序有效（不可用在shell script），执行者对于该程序需要具有x的可执行权限，本权限仅在执行该程序的过程中有效，执行者将具有该程序所有者的权限。
（用户执行二进制程序时，暂时具有程序所有者权限。
SGID：当s出现在用户组x时，称为Set GID，简称SGID。
功能限制：可以针对文件或目录设置：
文件：对二进制程序有用，程序执行者对该程序需要具有x权限，执行者在执行过程中将会获得该程序用户组的支持。
目录：用户若对此目录具有rx权限，该用户能够进入该目录，用户在此目录下的有效用户组将会变成该目录的用户组，若用户在此目录下具有w权限，则用户所创建的新文件的用户组与此目录的用户组相同。
（用户在这个目录下新建文件用户组都会与该目录的用户组名相同。
Sticky Bit/SBIT：仅针对目录有效
对目录作用：当用户对于此目录具有wx权限，即具有写入权限时，当用户在该目录下创建文件或目录时，仅有自己与root才有权利删除该文件。
5、三个权限设置方法是在上面三组权限前加一个数字，依次为421，如chomod 4755 filename则为-rwxr-xr-x。
注意：chomd 7666 test，最后是-rwSrwSrwT表示空的SUID/SGID，因为666表示都没有x执行，而s和t是用于替换x权限，SUID表示该文件在执行时候具有文件拥有者的权限，但是文件拥有者都没有执行，则其他没有执行权限
6、find找硬盘，whereis和locate找数据库（不是最新，可以现updatadb更新数据库，更新/var/lib/mlocate内的数据库文件。
7、目录变成可工作目录：目录x，若要在目录里ls则目录还需r；读文件基本权限：目录x文件r，修改文件：目录x文件rw；创建文件：目录wx；进入目录执行命令：目录x文件x。
注意：看是否可读一个文件，需要该用户在各级目录都具有x。
8、查找命令完整名which和type，通过PATH变量查找文件名，查找文件完整文件名用whereis或locate，使用find可加入参数直接查询文件系统，获取文件名。

第8章 Linux磁盘与文件系统管理
1、扇区是最小的物理存储单位，每个扇区512bytes，扇区组成圆即为柱面，柱面是分区的最小单位，第一个扇区最重要包含主引导记录mbr和分区表，其中mbr有446bytes，分区表64bytes用于记录四个分区柱面范围。
2、分区表的四条记录为主分区和扩展分区，扩展分区可以再分出逻辑分区，而能被格式化作为数据访问的分区只有主分区和逻辑分区，主分区和扩展分区最多4个，扩展分区最多1个，逻辑分区依os不同，ide硬盘最多59，sata硬盘则11分。
3、磁盘分区是告诉os，这块磁盘在此分区下可以访问的区域是柱面a和b之间的块。指定分区的起始和结束柱面。
磁盘分区后要被格式化，之后os才能使用，是因为每种os所设置的文件属性/权限不同，为了存放文件所需数据，需要分区格式化，以成为os能够利用的文件系统格式。
4、一个可被挂载的数据为一个文件系统而不是一个分区。（因一个分区可以格式化为多个文件系统，不再说针对分区来格式化）
5、文件系统最前面的有一个启动扇区，可以安装引导装载程序，这样可以将不同引导装载程序安装到个别的文件系统前端，不用覆盖整个硬盘唯一的mbr，这样才能够多重引导。
6、linux的ext2文件系统：超级块，inode，块组，块，inode表的多重索引数据块，每个块组都可能包含超级块（作为第一个块组内超级块的备份）。
inode固定128bytes，数据块block为1/2/4K，一般超级块1024bytes。
7、目录树读取：通过挂载信息找到挂载点inode好号码通常一个文件系统的最顶层inode号码从2开始），此时得到根目录的inode内容，并据此读取根目录的block内文件名数据，层层往下读取正确文件名。
8、ext3有日志文件系统，避免数据不一致问题，兼容ext2。
9、每个文件系统具有独立的innode，block，super block。要连接到目录树才可以被使用，将文件系统与目录树结合的操作叫挂载。挂载点一定是目录，该目录为进入该文件系统的入口。
10、df文件系统的整体磁盘使用量，读取范围是在超级块；du评估文件系统的磁盘使用量，常用于评估目录容量，会直接去文件系统内查找所有文件数据。
11、硬连接：新建文件名连接到inode，删除文件名，inode和block还存在。仅是在某个目录的block中写入一个数据，不会新增inode和block。不能跨文件系统，不能连接目录（因为要对目录下所有数据都建连接）。
软连接（符号连接）：创建独立文件，这个文件会将数据读写指向它连接的那个文件的文件名，源文件删除后，符号连接会开不了。占用inode和block。
12、磁盘分区-》格式化来创建文件系统-》挂载到某个目录。

第
12、磁盘分区-》格式化来创建文件系统-》挂载到某个目录。







第20章 Linux的启动流程分析














